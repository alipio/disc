#!/usr/bin/env ruby

require 'disc'
require ENV.fetch('DISC_REQUIRE')

if defined?(Celluloid)
  concurrency = ENV.fetch('DISC_CONCURRENCY', '25').to_i
  STDOUT.puts(
    "[Notice] Disc running in celluloid-mode! Current DISC_CONCURRENCY is\
 #{ concurrency }."
  )

  Disc::Worker.send(:include, Celluloid)

  if defined?(Celluloid::SupervisionGroup)
    # Deprecated as of Celluloid 0.17, but still supported via "backported mode"
    class Disc::WorkerGroup < Celluloid::SupervisionGroup
      pool Disc::Worker,
            size: ENV.fetch('DISC_CONCURRENCY', '25').to_i,
            as: :worker_pool,
            args: [{ run: true }]
    end

    Disc::WorkerGroup.run
  else
    Disc::Worker.pool(
      size: concurrency,
      args: [{ run: true }]
    )
  end
else
  STDOUT.puts(
    "[Notice] Disc running in non-threaded mode, consider requiring celluloid\
for a significant powerup!"
  )
  Disc::Worker.run
end
